version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:5.7
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:sVmOl8ai5AaTf+Qe32/V+iawu1PZL78LmgdWjsgJbQg=
      - DB_CONNECTION: mysql
      - MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/repo
    #
    steps:
      - checkout
      - run:
          name: Install depencies
          command: |
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EB27DB2A3B88B8B
            sudo apt-get update --allow-releaseinfo-change
      - run: sudo docker-php-ext-install zip pdo_mysql
      - run: sudo composer self-update --2
      - restore_cache:
          key: composer-v1-{{ checksum "./src/composer.lock" }}
      - run:
          command: composer install -n --prefer-dist
          working_directory: src
      - save_cache:
          key: composer-v1-{{ checksum "./src/composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
          working_directory: src
      - save_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
          paths:
            - node_modules
      - run:
          command: npm run dev
          working_directory: src
      - run:
          name: php test
          command: vendor/bin/phpunit
          working_directory: src


  deploy:
    docker:
      - image: circleci/php:7.3-node-browsers
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-no-dev-v1-{{ checksum "./src/composer.lock" }}
      - run: composer install -n --no-dev --prefer-dist
      - save_cache:
          key: composer-no-dev-v1-{{ checksum "./src/composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "./src/package-lock.json" }}
          paths:
            - node_modules
      - run: npm run prod
      - run:
          name: archive artifacts
          command: zip -ryq laravel-ci.zip .
      - aws-cli/install
      - run:
          name: upload artifacts to s3
          command: aws s3 cp laravel-ci.zip s3://${AWS_S3_BUCKET_NAME}
      - run:
          name: deploy to prod
          command: |
            aws deploy create-deployment \
            --application-name laravel-ci \
            --deployment-group-name laravel-ci \
            --s3-location bucket=${AWS_S3_BUCKET_NAME},key=laravel-ci.zip,bundleType=zip

orbs:
  aws-cli: circleci/aws-cli@1.0.0

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
